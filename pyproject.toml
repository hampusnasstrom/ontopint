[build-system]
requires = [
    "setuptools>=61.0.0",
    "setuptools-scm>=8.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "ontopint"
dynamic = ["version"]
description = "A python package for reading units from a JSON-LD files and generating pint quantities."
readme = "README.md"
authors = [
    { name = "Hampus Näsström", email = 'hampus.naesstroem@physik.hu-berlin.de' },
    { name = "Fabian Kirchner" },
    { name = "Simon Stier" },
    { name = "Fabio Lopes" },
    { name = "Despoina Adamopoulou" },
    { name = "Samantha Pearman-Kanza"}
]
maintainers = [
  { name = "Hampus Näsström", email = 'hampus.naesstroem@physik.hu-berlin.de' }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "rdflib",
    "sparqlwrapper",
    "pint",
    "pyld",
    "ucumvert",
]
[project.optional-dependencies]
dev = [
    "pytest",
    "deepdiff",
]

[project.license]
file = "LICENSE"

[project.urls]
"Homepage" = "https://github.com/hampusnasstrom/ontopint"
"Bug Tracker" = "https://github.com/hampusnasstrom/ontopint/issues"

[tool.ruff]
include = ["src/*.py", "tests/*.py"]
select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "PL", # pylint
]
ignore = [
    "E501", # Line too long ({width} > {limit} characters)
    "E701", # Multiple statements on one line (colon)
    "E731", # Do not assign a lambda expression, use a def
    "E402",  # Module level import not at top of file
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLW0603", # Using the global statement
    "PLW2901", # redefined-loop-name
    "PLR1714", # consider-using-in
    "PLR5501", # else-if-used
]
fixable = ["ALL"]
exclude = ["dependencies"]

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.format]
# use single quotes for strings.
quote-style = "single"

# indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.setuptools.packages.find]
where = [
    "src",
]

[tool.setuptools_scm]